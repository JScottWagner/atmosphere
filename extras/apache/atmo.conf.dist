###############################################################################
## HTTP Virtual Host Context (Forwards requests to HTTPS)
###############################################################################
<VirtualHost *:80>
	ErrorLog ${APACHE_LOG_DIR}/error.log
	LogLevel warn
	CustomLog ${APACHE_LOG_DIR}/access.log combined

  RewriteEngine On
  RewriteCond %{HTTPS} !=on
  RewriteRule ^/?(.*) https://MYHOSTNAMEHERE/$1 [R,L]
</VirtualHost>

###############################################################################
## SSL Configuration
###############################################################################
SSLCryptoDevice builtin

###############################################################################
## Celery-Flower proxy redirection
###############################################################################
ProxyRequests Off
ProxyPreserveHost On
SSLProxyEngine On

ProxyPass         /flower  https://MYHOSTNAMEHERE:8443
ProxyPassReverse  /flower  https://MYHOSTNAMEHERE:8443
ProxyPassReverse  /flower  https://MYHOSTNAMEHERE/flower

<Proxy https://MYHOSTNAMEHERE:8443/flower*>
  Order deny,allow
  Allow from all
</Proxy>

###############################################################################
## Jenkins proxy redirection
###############################################################################
ProxyPass         /jenkins  http://MYHOSTNAMEHERE:8080/jenkins
ProxyPassReverse  /jenkins  http://MYHOSTNAMEHERE:8080/jenkins
ProxyPassReverse  /jenkins  http://MYHOSTNAMEHERE/jenkins

<Proxy http://MYHOSTNAMEHERE:8080/jenkins*>
  Order deny,allow
  Allow from all
</Proxy>

###############################################################################
## HTTPS (Port 443) Virtualhost Configuration
###############################################################################
<VirtualHost *:443>
    # Rewrite
    RewriteEngine On
    RewriteCond %{HTTP:Authorization} ^(.*)
    RewriteRule .* - [e=HTTP_AUTHORIZATION:%1]
    # for the old domain
    RewriteCond %{HTTP_HOST} ^MYHOSTNAMEHERE$
    RewriteRule ^/(.*)$       https://MYHOSTNAMEHERE/$1 [R,L]
  
    # SSL Settings
    SSLEngine on
    SSLProtocol all -SSLv2
    SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW
    SSLCertificateFile /etc/ssl/certs/BASECERTHERE
    SSLCertificateKeyFile /etc/ssl/private/KEYHERE
    SSLCertificateChainFile /etc/ssl/certs/BUNDLECERTHERE
  
    <Files ~ "\.(cgi|shtml|phtml|php3?)$">
        SSLOptions +StdEnvVars
    </Files>
    <Directory "/var/www/cgi-bin">
        SSLOptions +StdEnvVars
    </Directory>
  
    SetEnvIf User-Agent ".*MSIE.*" \
             nokeepalive ssl-unclean-shutdown \
             downgrade-1.0 force-response-1.0

    SetEnv DJANGO_SETTINGS_MODULE atmosphere.settings

    # Logging
    ErrorLog /var/log/apache2/ssl_error.log
    TransferLog /var/log/apache2/ssl_access.log
    LogLevel warn

    # Catch static file paths
    # favicon and robots are better served outside of WSGI
    Alias /favicon.ico LOCATIONOFATMOSPHEREHERE/static/images/favicon.ico
    Alias /robots.txt LOCATIONOFATMOSPHEREHERE/templates/robots.txt
    #init_files && resources will auto-direct to the file
    Alias /init_files LOCATIONOFATMOSPHEREHERE/init_files
    Alias /resources LOCATIONOFATMOSPHEREHERE/resources
    #Assing WSGI to any other folder
    WSGIScriptAlias / LOCATIONOFATMOSPHEREHERE/atmosphere/wsgi.py

    # Shell
    <Location /shell>
        AuthType CAS
        AuthName "CAS"
        require valid-user
        CASScope /
        Order allow,deny
        Allow from all
    </Location>

    Alias /static/rest_framework LOCATIONOFATMOSPHEREHERE/static/rest_framework
    Alias /static LOCATIONOFTROPOSPHEREHERE/troposphere/assets
    ProxyPass /application http://localhost:5000/application
    ProxyPassReverse /application http://localhost:5000/application
    ProxyPass /cas/service http://localhost:5000/cas/service
    ProxyPassReverse /cas/service http://localhost:5000/cas/service

</VirtualHost>
